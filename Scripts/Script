local s = loadstring(game:HttpGet("https://raw.githubusercontent.com/x203f/WordBombExploits/main/Modules/UIModule/UI",true))()
local module = {
    modules = {
        Keyboard = loadstring(game:HttpGet("https://raw.githubusercontent.com/x203f/WordBombExploits/main/Modules/KeyboardVariables",true))(),
        Normal    = loadstring(game:HttpGet("https://gist.githubusercontent.com/raw/6f3d37a9f5068a0fc2203ac77077ce06/", true))(),
        Long = loadstring(game:HttpGet("https://pastebin.com/raw/UuzSb9XV", true))()

    },
    timeout = 1
}
function module:GetCurrentPlayerIDTurn()
    local Id
    for _,v in pairs(getgc()) do
        if type(v) == "function" then
            for __,vv in pairs(debug.getupvalues(v)) do
                if type(vv) == "table" and vv.PlayerID ~= nil then
                    Id = vv.PlayerID
                end
            end
        end
    end
    return Id
end
function module:YourTurn()
    for _,v in pairs(getgc()) do
        if type(v) == "function" then
            for __,vv in pairs(debug.getupvalues(v)) do
                if type(vv) == "table" and vv.PlayerID == game.Players.LocalPlayer.UserId then
                    return true
                end
            end
        end
    end
    return false
end
function module:searchForTheWord(containment)
    local LongWordModule = module.modules.Long
    local NormalWords = module.modules.Normal
    for i,word in pairs(LongWordModule) do
        if string.find(word,containment) ~= nil then
            return word
        end

    end
    for i,w in pairs(NormalWords) do
        if string.find(w,containment) ~= nil then
            return w
        end
    end
    return
end
function module:InsertAnswer2(word)
    local finalword = string.upper(word)
    local keys = module.modules.Keyboard
    for v in string.gmatch(finalword,".") do
        keypress(keys[v])
        wait(module.timeout)
        continue
    end
    print("press key "..keys["RETURN"])
    keypress(keys.RETURN)
end
function module:InsertAnswer(word,typebox)
   local randtime1 = math.random(100, 175)/100
   if textype.Name == "Typebox" then
       wait(randtime1)
       for v in string.gmatch(word, "(%w)") do
           wait()
           local randtime2 = math.random(2, 10)/100
           typebox.Text = typebox.Text..string.upper(v)
           wait(randtime2)
      end
   end
   keypress(0x0D)
   else
       wait()
   end
end
function module:GetLetters()
    local TextFrame = game:GetService("Players").LocalPlayer.PlayerGui.GameUI.Container.GameSpace.DefaultUI.GameContainer.DesktopContainer.InfoFrameContainer.InfoFrame.TextFrame
    local Text = ""
    for i,v in pairs(TextFrame:GetChildren()) do
        if v.Name == "LetterFrame" then
            Text = Text..(v.Letter.TextLabel.Text)
        end
    end
    if Text ~= nil then
        local finalText, _ = string.gsub(Text,"OX","")
        if finalText then
            return finalText
        end
    end
    return Text
end
s:Init()
local Check1 = false
function onChecked()
	Check1 = true
end
function OnUnChecked()
	Check1 = false
end
spawn(function()
	s:AddCheckMark("Auto type",onChecked,OnUnChecked)
end)
local UIS = game:GetService("UserInputService")
UIS.TextBoxFocused:Connect(function(tb)
	if Check1 == true then
		module:InsertAnswer(module:searchForTheWord(module:GetLetters()),tb)
	else
		print("Unchecked")
	end
end)